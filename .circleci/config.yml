version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge

    steps:
      - checkout

      - run:
          name: Setup environment variables
          command: |
            ./mp.sh
            sed -i "s/<api-token>/${COMPOSER_TOKEN}/g" .env

      - run:
          name: Setup dependencies
          command: |
            docker network create micronet
            ./mp.sh up
            ./mp.sh composer install
            ./mp.sh schema bundle

      - run:
          name: Run tests
          command: |
            ./mp.sh test skeleton
            if [ "$(head -n 3 build/report.junit.xml | grep 'errors="0"' | grep 'failures="0"')" == '' ]; then exit 1; else exit 0; fi

  deploy_develop:
    machine:
      image: circleci/classic:edge

    steps:
      - checkout

      - run:
          name: Setup environment variables
          command: |
            ./mp.sh
            sed -i "s/<api-token>/${COMPOSER_TOKEN}/g" .env

      - run:
          name: Login to Docker Hub
          command: |
            docker login --username ${DOCKER_USER} --password ${DOCKER_PASSWORD}

      - run:
          name: Deploy to docker
          command: |
            ./docker/build.sh microservice develop

  deploy_tag:
    machine:
      image: circleci/classic:edge

    steps:
      - checkout

      - run:
          name: Setup environment variables
          command: |
            ./mp.sh
            sed -i "s/<api-token>/${COMPOSER_TOKEN}/g" .env

      - run:
          name: Login to Docker Hub
          command: |
            docker login --username ${DOCKER_USER} --password ${DOCKER_PASSWORD}

      - run:
          name: Deploy to docker
          command: |
            TAG="$(git describe --exact-match --tags --abbrev=0 $(git rev-parse HEAD) 2>/dev/null)"
            ./docker/build.sh microservice $TAG
            ./docker/build.sh microservice latest

workflows:
  version: 2

  test:
    jobs:
      - build:
          filters:
            branches:
              ignore: /^(master|develop)$/

  build_and_deploy_develop:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - deploy_develop:
          requires:
            - build
          filters:
            branches:
              only: develop

  build_and_deploy_tag:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - deploy_tag:
          requires:
            - build
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
